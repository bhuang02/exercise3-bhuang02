name: ci-cd-pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 21
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '21'
      - name: Build with Maven
        run: mvn compile

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 21
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '21'
      - name: Test with Maven
        run: mvn test
      - name: Upload Test Results
        uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: target/surefire-reports/

  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 21
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '21'
      - name: SonarQube Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn sonar:sonar -Dsonar.projectKey=ConnectFour -Dsonar.host.url=http://sonarqube:9000 -Dsonar.login=$SONAR_TOKEN
        continue-on-error: true

  package:
    name: Package
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 21
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '21'
      - name: Package with Maven
        run: mvn package
      - name: Upload WAR Artifact
        uses: actions/upload-artifact@v2
        with:
          name: war-package
          path: target/*.war

  deploy:
    name: Deploy
    runs-on: self-hosted
    needs: package
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Deploy to Docker
        run: |
          docker rm --force connectfour || true
          docker image rm --force connectfour || true
          docker build . -t connectfour
          docker run -d --rm --name connectfour -p 8080:8080 connectfour

  stop_deploy:
    name: Stop Deploy
    runs-on: self-hosted
    steps:
      - name: Stop Docker Container
        run: docker rm --force connectfour || true
